# Stream Device Protocol for the Agilent 4UHV Ion Pump Controller Window Protocol
# Pete Owens 4/6/2015
#
# Message format is:
#      <STX><ADR><WIN><COM><DATA><ETX><CRC>
# where
#      <STX>   : Start of transmission (1 byte) = 0x02
#      <ADR>   : Unit Address (1 byte) = 0x80 for RS232
#      <WIN>   : Window number (3 bytes)
#      <COM>   : Command (1 bytes): Read = '0'(0x30), Write = '1'(0x31)
#      <DATA>  : Optional - depends on <WIN>
#      <ETX>   : End of transmission (1 byte) = 0x03
#      <CRC>   : Checksum (2 bytes) - XOR of all characters following <STX>
#
# Arguments:
# $1 = channel: 1 digit - 1-4

addr = 0x80; # address
rd   = 0x30; # read
wr   = 0x31; # write

replytimeout = 1000;
readtimeout  = 20;

#
# Controller Parameters
#

get_model { 
    MaxInput = 19;
	out STX $addr "319" $rd         ETX "%01<xor>"; 
	in  STX "\?"  "319" $rd "%10c"  ETX "%01<xor>";
}

get_serial { 
    MaxInput = 19; 
    out STX $addr "323" $rd         ETX "%01<xor>";
    in  STX "\?"  "323" $rd "%10c"  ETX "%01<xor>"; 
}

set_unit   { 
    MaxInput =  6; 
    out STX $addr "600" $wr "%06d"  ETX "%01<xor>"; 
    in  STX "\?"        ACK         ETX "%01<xor>"; 
}

get_unit   { 
    MaxInput = 15; 
    out STX $addr "600" $rd         ETX "%01<xor>";
    in  STX "\?"  "600" $rd "%6d"   ETX "%01<xor>"; 
}

set_mode
{ 
    MaxInput =  6;
    out STX $addr "601" $wr "%010d" ETX "%01<xor>";
    in  STX "\?"        ACK         ETX "%01<xor>"; 
}

#Autostart On/OFF
get_mode
{ 
    MaxInput = 19;
    out STX $addr "601" $rd         ETX "%01<xor>";
    in  STX "\?"  "601" $rd "%10d"  ETX "%01<xor>"; 
}

get_prot
{
    MaxInput = 19;
    out STX $addr "602" $rd         ETX "%01<xor>"; 
    in  STX "\?"  "602" $rd "%10b"  ETX "%01<xor>";
}

get_step {
    MaxInput = 19;
    out STX $addr "603" $rd         ETX "%01<xor>"; 
    in  STX "\?"  "603" $rd "%10b"  ETX "%01<xor>";
}


#
# Ion Pump Parameters
#

set_state
{
    MaxInput =  10;
    out STX $addr "01\$1" $wr "%1d"      ETX "%01<xor>"; 
    in  STX "\?"          ACK            ETX "%01<xor>";
    @init{
        out STX $addr "01\$1" $rd            ETX "%01<xor>"; 
        in  STX "\?"  "01\$1" $rd "%1d"      ETX "%01<xor>";
    }
}

get_state
{
    MaxInput = 10;
    out STX $addr "01\$1" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "01\$1" $rd "%1d"      ETX "%01<xor>";
}

set_pwrmax {
    MaxInput =  6;
    out STX $addr "6\$12" $wr "%05d0"    ETX "%01<xor>"; 
    in  STX "\?"          ACK            ETX "%01<xor>";
}

get_pwrmax {
    MaxInput = 15;
    out STX $addr "6\$12" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "6\$12" $rd "%6d"      ETX "%01<xor>";
}

set_vtgt {
    MaxInput =  6;
    out STX $addr "6\$13" $wr "%03d000"  ETX "%01<xor>"; 
    in  STX "\?"          ACK            ETX "%01<xor>";
}

get_vtgt {
    MaxInput = 15;
    out STX $addr "6\$13" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "6\$13" $rd "%3d000"   ETX "%01<xor>";
}

set_iprot
{
    MaxInput =  6;
    out STX $addr "6\$14" $wr "%06d"     ETX "%01<xor>"; 
    in  STX "\?"          ACK            ETX "%01<xor>";
}

get_iprot
{
    MaxInput = 15;
    out STX $addr "6\$14" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "6\$14" $rd "%6d"      ETX "%01<xor>";
}

#
# Set Points
#

get_setpt
{
    MaxInput = 19;
    out STX $addr "6\$15" $rd            ETX "%01<xor>";  #Read set value
    in  STX "\?"  "6\$15" $rd "%10g"     ETX "%01<xor>";
    @init
    {
        out STX $addr "6\$15" $rd            ETX "%01<xor>"; 
        in  STX "\?"  "6\$15" $rd "%10g"     ETX "%01<xor>";
	}
}

set_setpt
{
    MaxInput =  6;
    #out STX $addr "6\$15" $wr "%5e"     ETX "%01<xor>"; 
    out STX $addr "6\$15" $wr "1.0000E-08"     ETX "%01<xor>"; 
    in  STX "\?"          ACK            ETX "%01<xor>";
}

get_setptstate1
{
    #MaxInput =  10;
    separator="";
    out STX $addr "804" $rd      ETX "%01<xor>"; #Read relais status
    in  STX $addr "804" $rd "%*6b%{0|1}%*{0|1}%*{0|1}%*{0|1}"  ETX "%01<xor>";
}

get_setptstate2
{
    #MaxInput =  10;
    separator="";
    out STX $addr "804" $rd      ETX "%01<xor>"; #Read relais status
    in  STX $addr "804" $rd "%*6b%*{0|1}%{0|1}%*{0|1}%*{0|1}"  ETX "%01<xor>";
}

get_setptstate3
{
    #MaxInput =  10;
    separator="";
    out STX $addr "804" $rd      ETX "%01<xor>"; #Read relais status
    in  STX $addr "804" $rd "%*6b%*{0|1}%*{0|1}%{0|1}%*{0|1}"  ETX "%01<xor>";
}

get_setptstate4
{
    #MaxInput =  10;
    separator="";
    out STX $addr "804" $rd      ETX "%01<xor>"; #Read relais status
    in  STX $addr "804" $rd "%*6b%*{0|1}%*{0|1}%*{0|1}%{0|1}"  ETX "%01<xor>";
}

get_setptstatus
{
    #MaxInput =  10;
    separator="";
    out STX $addr "804" $rd      ETX "%01<xor>"; #Read relais status
    in  STX $addr "804" $rd "%*6b%{0|1}"  ETX "%01<xor>";
}


#
# Interlocks
#

get_interlock{
    out STX $addr "803" $rd            ETX "%01<xor>"; 
    #in STX $addr "803" $rd            ETX "%01<xor>"; 
}

#
# Temperatures
#

get_tempf
{
    MaxInput = 15;
    out STX $addr "800"   $rd            ETX "%01<xor>"; 
    in  STX "\?"  "800"   $rd "%6d"      ETX "%01<xor>";
}

get_temp1
{
    MaxInput = 15;
    out STX $addr "801"   $rd            ETX "%01<xor>"; 
    in  STX "\?"  "801"   $rd "%6d"      ETX "%01<xor>";
}

get_temp2
{
    MaxInput = 15;
    out STX $addr "802"   $rd            ETX "%01<xor>"; 
    in  STX "\?"  "802"   $rd "%6d"      ETX "%01<xor>";
}

get_temp3
{
    MaxInput = 15;
    out STX $addr "808"   $rd            ETX "%01<xor>"; 
    in  STX "\?"  "808"   $rd "%6d"      ETX "%01<xor>";
}

get_temp4
{
    MaxInput = 15;
    out STX $addr "809"   $rd            ETX "%01<xor>"; 
    in  STX "\?"  "809"   $rd "%6d"      ETX "%01<xor>";
}

#
# Voltage, Current, Pressure and Error
#

get_volt {
    MaxInput = 15;
    out STX $addr "8\$10" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "8\$10" $rd "%6d"      ETX "%01<xor>";
}

get_curr {
    MaxInput = 19;
    out STX $addr "8\$11" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "8\$11" $rd "%10g"     ETX "%01<xor>";
}

get_press
{
    MaxInput = 19;
    out STX $addr "8\$12" $rd            ETX "%01<xor>"; 
    in  STX "\?"  "8\$12" $rd "%10g"     ETX "%01<xor>";
}

get_error
{
    out STX $addr "505"   $wr "00000\$1" ETX "%01<xor>";
    in  STX "\?"          ACK            ETX "%01<xor>";
    out STX $addr "206"   $rd            ETX "%01<xor>"; 
    in  STX "\?"  "206"   $rd "%6d"      ETX "%01<xor>";
}

######################################################################
